{"remainingRequest":"C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\src\\App.vue","mtime":1639516305580},{"path":"C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639481309788},{"path":"C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1639481311332},{"path":"C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1639481310497},{"path":"C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639481308762},{"path":"C:\\Users\\Dmitrii\\Desktop\\MyGit\\web-prog-course\\lesson11\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1639481310727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojYXBwIHsNCg0KfQ0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <Header :user=\"user\"/>\r\n    <Middle :posts=\"posts\" :users=\"users\"/>\r\n    <Footer/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"./components/Header\";\r\nimport Middle from \"./components/Middle\";\r\nimport Footer from \"./components/Footer\";\r\nimport axios from \"axios\"\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Footer,\r\n    Middle,\r\n    Header\r\n  },\r\n  data: function () {\r\n    return {\r\n      user: null,\r\n      posts: [],\r\n      users: []\r\n    }\r\n  },\r\n  beforeMount() {\r\n    if (localStorage.getItem(\"jwt\") && !this.user) {\r\n      this.$root.$emit(\"onJwt\", localStorage.getItem(\"jwt\"));\r\n    }\r\n\r\n    axios.get(\"/api/1/posts\").then(response => {\r\n      this.posts = response.data;\r\n    });\r\n\r\n    axios.get(\"/api/1/users\").then(response => {\r\n      this.users = response.data;\r\n    });\r\n  },\r\n  beforeCreate() {\r\n    this.$root.$on(\"onEnter\", (login, password) => {\r\n      if (password === \"\") {\r\n        this.$root.$emit(\"onEnterValidationError\", \"Password is required\");\r\n        return;\r\n      }\r\n\r\n      axios.post(\"/api/1/jwt\", {\r\n        login, password\r\n      }).then(response => {\r\n        localStorage.setItem(\"jwt\", response.data);\r\n        this.$root.$emit(\"onJwt\", response.data, \"onLogout\");\r\n      }).catch(error => {\r\n        this.$root.$emit(\"onEnterValidationError\", error.response.data);\r\n      });\r\n    });\r\n\r\n    this.$root.$on(\"onRegister\", (name, login, password) => {\r\n      if (password === \"\") {\r\n        this.$root.$emit(\"onRegisterValidationError\", \"Password is required\");\r\n        return;\r\n      }\r\n\r\n      axios.post(\"/api/1/users\", {\r\n        name, login, password\r\n      }).then(response => {\r\n        localStorage.setItem(\"jwt\", response.data);\r\n        this.$root.$emit(\"onJwt\", response.data, \"onRegister\");\r\n      }).catch(error => {\r\n        this.$root.$emit(\"onRegisterValidationError\", error.response.data);\r\n      });\r\n    });\r\n\r\n    this.$root.$on(\"onJwt\", (jwt, errorEvent) => {\r\n      localStorage.setItem(\"jwt\", jwt);\r\n\r\n      axios.get(\"/api/1/users/auth\", {\r\n        params: {\r\n          jwt\r\n        }\r\n      }).then(response => {\r\n        this.user = response.data;\r\n        this.$root.$emit(\"onChangePage\", \"Index\");\r\n      }).catch(() => this.$root.$emit(errorEvent))\r\n    });\r\n\r\n    this.$root.$on(\"onLogout\", () => {\r\n      localStorage.removeItem(\"jwt\");\r\n      this.user = null;\r\n    });\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n\r\n}\r\n</style>\r\n"]}]}